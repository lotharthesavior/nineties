use tera::Tera;
use tera::Context;

pub fn load_template(template: &str, params: Vec<(&str, &str)>) -> String {
    let tera = match Tera::new("src/resources/views/**/*") {
        Ok(t) => t,
        Err(e) => {
            println!("Parsing error(s): {}", e);
            ::std::process::exit(1);
        }
    };

    let mut context = Context::new();
    for (key, value) in params.into_iter().collect::<Vec<(&str, &str)>>() {
        context.insert(key, value);
    }

    tera.render(template, &context).expect("Failed to render template")
}