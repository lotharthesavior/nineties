name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true

      - name: Build Release
        run: |
          cp .env.example .env
          cargo build --release

      - name: Locate Binary
        id: locate_binary
        run: echo "path=$(pwd)/target/release/nineties" >> $GITHUB_OUTPUT

#      - name: Create GitHub Release
#        id: create_release
#        uses: actions/create-release@v2
#        env:
#          # GITHUB_TOKEN: ${{ secrets.PAT_NINETIES }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          draft: false
#          prerelease: false

      - name: Release
        id: create_release
        uses: softprops/action-gh-release@v2

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_NINETIES }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.locate_binary.outputs.path }}
          asset_name: nineties
          asset_content_type: application/octet-stream
